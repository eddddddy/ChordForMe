f, t, spec = signal.spectrogram(samples, sample_rate, nperseg=2048)

Call Stack:

Location: tukey: 886
------------------------
spectrogram

x = samples
fs = sample_rate
window = ('tukey',.25)
nperseg = 2048
noverlap = None
nfft = None
detrend = 'constant'
return_onesided = True
scaling = 'density'
axis = -1
mode = 'psd'
modelist = ['psd', 'complex', 'magnitude', 'angle', 'phase']

r/a: generate_images.py
-------------------------
_triage_segments

window = ('tukey',.25)
nperseg = 2048
input_length = samples.shape[-1] 
# if length of samples < 2048, use nperseg = length of samples

r/a: spectrogram: 690
-------------------------
get_window

window = ('tukey',.25)
Nx = nperseg
fftbins = True
sym = False
args = (0.25,)
winstr = 'tukey'
winfunc = tukey;
params = (nperseg, 0.25, False)

r/a: _triage_segments: 1787
--------------------------
tukey

M = nperseg + 1
alpha = 0.25
sym = False
needs_trunc = True

r/a: get_window: 1767













